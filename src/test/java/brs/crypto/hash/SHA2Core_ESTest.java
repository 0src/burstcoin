/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 21 21:11:27 GMT 2017
 */

package brs.crypto.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import brs.crypto.hash.SHA256;
import brs.crypto.hash.SHA2Core;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SHA2Core_ESTest extends SHA2Core_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      sHA256_0.digest();
      // Undeclared exception!
      try { 
        sHA256_0.doPadding((byte[]) null, (-1740746414));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      SHA256 sHA256_1 = new SHA256();
      sHA256_0.copyState(sHA256_1);
      sHA256_0.toString();
      sHA256_0.toString();
      sHA256_0.digest();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-91);
      byteArray0[1] = (byte)0;
      sHA256_1.update(byteArray0);
      // Undeclared exception!
      try { 
        sHA256_0.copyState((SHA2Core) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      // Undeclared exception!
      try { 
        sHA256_0.processBlock((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      sHA256_0.doInit();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      sHA256_0.getInitVal();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      sHA256_0.copy();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      sHA256_0.update(byteArray0, 0, (int) (byte)0);
      // Undeclared exception!
      try { 
        sHA256_0.doPadding(byteArray0, 57);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 57
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      sHA256_0.getBlockLength();
      SHA256 sHA256_1 = new SHA256();
      sHA256_0.copyState(sHA256_1);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-93);
      byteArray0[3] = (byte) (-119);
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte)54;
      // Undeclared exception!
      try { 
        sHA256_0.doPadding(byteArray0, 1116352408);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1116352408
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)0;
      // Undeclared exception!
      try { 
        sHA256_0.doPadding(byteArray0, (byte) (-40));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -40
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      sHA256_0.makeMDPadding();
      sHA256_0.toString();
      SHA256 sHA256_1 = new SHA256();
      sHA256_0.copyState(sHA256_1);
      sHA256_1.copyState(sHA256_0);
      sHA256_0.engineReset();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)55;
      // Undeclared exception!
      try { 
        sHA256_0.doPadding(byteArray0, (byte) (-14));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -14
         //
         verifyException("brs.crypto.hash.SHA2Core", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-95);
      byteArray0[1] = (byte) (-86);
      sHA256_0.digest(byteArray0);
      sHA256_0.getInitVal();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SHA256 sHA256_0 = new SHA256();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)63;
      byteArray0[3] = (byte)27;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)66;
      // Undeclared exception!
      try { 
        sHA256_0.processBlock(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
