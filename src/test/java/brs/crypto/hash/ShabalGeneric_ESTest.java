/*
 * This file was automatically generated by EvoSuite
 * Tue Nov 21 20:49:08 GMT 2017
 */

package brs.crypto.hash;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import brs.crypto.hash.Digest;
import brs.crypto.hash.ShabalGeneric;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShabalGeneric_ESTest extends ShabalGeneric_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      byte[] byteArray0 = shabalGeneric0.digest();
      shabalGeneric0.digest(byteArray0);
      shabalGeneric0.dup();
      shabalGeneric0.getBlockLength();
      shabalGeneric0.getDigestLength();
      // Undeclared exception!
      try { 
        shabalGeneric0.digest(byteArray0, 52, 773);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(320);
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      // Undeclared exception!
      try { 
        shabalGeneric1.update((byte[]) null, 320, 320);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(480);
      byte[] byteArray0 = new byte[3];
      shabalGeneric0.dup();
      byteArray0[0] = (byte) (-89);
      shabalGeneric0.update((byte) (-89));
      shabalGeneric0.toString();
      shabalGeneric0.reset();
      byteArray0[2] = (byte) (-89);
      Digest digest0 = shabalGeneric0.copy();
      byte[] byteArray1 = digest0.digest();
      digest0.update((byte)86);
      digest0.update(byteArray0);
      digest0.digest(byteArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      // Undeclared exception!
      try { 
        shabalGeneric0.digest((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(32);
      shabalGeneric0.update((byte)43);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)43;
      // Undeclared exception!
      try { 
        shabalGeneric0.digest((byte[]) null, 63, (int) (byte)43);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      byte[] byteArray0 = shabalGeneric0.digest();
      shabalGeneric0.dup();
      assertEquals(64, shabalGeneric0.getDigestLength());
      
      // Undeclared exception!
      try { 
        shabalGeneric0.update(byteArray0, (-1609), (int) (byte) (-84));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      shabalGeneric0.digest();
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      shabalGeneric1.getDigestLength();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      shabalGeneric0.digest();
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      shabalGeneric1.copy();
      shabalGeneric1.update((byte) (-84));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-84);
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte) (-84);
      byteArray0[3] = (byte) (-84);
      byteArray0[4] = (byte) (-84);
      byteArray0[5] = (byte) (-84);
      byteArray0[6] = (byte) (-84);
      byteArray0[7] = (byte) (-84);
      // Undeclared exception!
      try { 
        shabalGeneric0.update(byteArray0, 3441, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      byte[] byteArray0 = shabalGeneric0.digest();
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      // Undeclared exception!
      try { 
        shabalGeneric1.update(byteArray0, (int) (byte) (-84), 27);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      shabalGeneric0.digest();
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      // Undeclared exception!
      try { 
        shabalGeneric1.reset();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(32);
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      // Undeclared exception!
      try { 
        shabalGeneric1.digest();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      // Undeclared exception!
      try { 
        shabalGeneric1.update((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      shabalGeneric0.update((byte) (-84));
      shabalGeneric0.digest();
      shabalGeneric0.dup();
      shabalGeneric0.reset();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(320);
      ShabalGeneric shabalGeneric1 = new ShabalGeneric(320);
      byte[] byteArray0 = new byte[8];
      shabalGeneric0.digest(byteArray0, (int) (byte)3, 0);
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)63;
      shabalGeneric1.digest(byteArray0, 320, (-1193));
      byteArray0[2] = (byte) (-41);
      byteArray0[3] = (byte) (-41);
      byteArray0[4] = (byte)27;
      byteArray0[5] = (byte)27;
      byteArray0[6] = (byte)55;
      byteArray0[7] = (byte) (-47);
      // Undeclared exception!
      try { 
        shabalGeneric1.digest(byteArray0, 320, 56);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 320
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(480);
      byte[] byteArray0 = new byte[3];
      shabalGeneric0.dup();
      byteArray0[0] = (byte) (-89);
      shabalGeneric0.update((byte) (-89));
      shabalGeneric0.toString();
      byteArray0[2] = (byte) (-104);
      byte[] byteArray1 = shabalGeneric0.digest(byteArray0);
      Digest digest0 = shabalGeneric0.copy();
      byte[] byteArray2 = digest0.digest();
      digest0.update(byteArray1);
      digest0.toString();
      digest0.digest(byteArray2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = new ShabalGeneric(512);
      byte[] byteArray0 = shabalGeneric0.digest();
      ShabalGeneric shabalGeneric1 = shabalGeneric0.dup();
      shabalGeneric0.getBlockLength();
      shabalGeneric0.getDigestLength();
      // Undeclared exception!
      try { 
        shabalGeneric1.digest(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = null;
      try {
        shabalGeneric0 = new ShabalGeneric(36);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid Shabal output size: 36
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = null;
      try {
        shabalGeneric0 = new ShabalGeneric(5266);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid Shabal output size: 5266
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ShabalGeneric shabalGeneric0 = null;
      try {
        shabalGeneric0 = new ShabalGeneric(23);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // invalid Shabal output size: 23
         //
         verifyException("brs.crypto.hash.ShabalGeneric", e);
      }
  }
}
