/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Nov 21 21:34:01 GMT 2017
 */

package brs;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Poll_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "brs.Poll"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.timezone", "Europe/Berlin"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Poll_ESTest_scaffolding.class.getClassLoader() ,
      "org.bouncycastle.asn1.ASN1Sequence",
      "org.h2.expression.ExpressionVisitor",
      "brs.Attachment$AbstractAttachment",
      "org.firebirdsql.gds.impl.GDSServerVersion",
      "org.h2.engine.SessionInterface",
      "org.firebirdsql.gds.impl.GDSServerVersionException",
      "org.h2.tools.Csv",
      "org.mariadb.jdbc.internal.com.read.resultset.ColumnInformation",
      "org.h2.expression.Operation",
      "brs.db.EntityTable",
      "org.firebirdsql.encodings.DefaultEncodingDefinition",
      "org.h2.expression.Condition",
      "org.firebirdsql.jna.fbclient.ISC_STATUS",
      "org.h2.result.Row",
      "brs.Generator$GeneratorState",
      "org.h2.engine.RightOwner",
      "org.h2.table.TableView",
      "org.firebirdsql.gds.ng.DatatypeCoder",
      "org.firebirdsql.gds.ng.jna.JnaEventHandle",
      "org.h2.util.AutoCloseInputStream",
      "org.h2.command.CommandInterface",
      "brs.db.store.Stores",
      "org.mariadb.jdbc.internal.logging.LoggerFactory",
      "org.h2.value.ValueNull",
      "org.h2.value.ValueShort",
      "org.bouncycastle.asn1.x509.X509ObjectIdentifiers",
      "org.h2.expression.Function",
      "org.h2.value.ValueDecimal",
      "org.firebirdsql.gds.ng.AbstractEventHandle",
      "org.bouncycastle.asn1.ASN1Primitive",
      "brs.util.Listener",
      "org.firebirdsql.gds.ng.listeners.AbstractListenerDispatcher",
      "org.h2.util.SmallLRUCache",
      "org.firebirdsql.gds.ng.TransactionState",
      "org.firebirdsql.gds.EventHandler",
      "org.h2.tools.SimpleRowSource",
      "org.h2.engine.DbObjectBase",
      "brs.db.BurstIterator",
      "brs.util.Observable",
      "brs.Attachment$EmptyAttachment",
      "org.h2.schema.Sequence",
      "org.h2.value.ValueTimestampTimeZone",
      "org.mariadb.jdbc.internal.com.read.resultset.rowprotocol.TextRowProtocol",
      "org.h2.value.Value",
      "org.bouncycastle.asn1.x509.X509Name",
      "brs.db.DerivedTable",
      "org.h2.expression.ExpressionColumn",
      "org.firebirdsql.gds.BlobParameterBuffer",
      "brs.BlockchainProcessor$BlockNotAcceptedException",
      "org.h2.expression.Expression",
      "org.firebirdsql.gds.ng.fields.RowDescriptor",
      "brs.BlockImpl",
      "org.h2.value.CompareMode",
      "org.h2.value.ValueString",
      "org.h2.value.ValueJavaObject",
      "org.firebirdsql.gds.ng.jna.JnaStatement",
      "org.firebirdsql.gds.ng.FbBlob",
      "org.firebirdsql.gds.ng.jna.JnaTransaction",
      "org.bouncycastle.asn1.ASN1Object",
      "org.bouncycastle.asn1.ASN1ObjectIdentifier",
      "org.h2.engine.SessionWithState",
      "org.h2.message.Trace",
      "org.firebirdsql.gds.ng.listeners.ExceptionListenable",
      "brs.util.Time",
      "org.h2.result.SortOrder",
      "org.h2.value.ValueInt",
      "org.firebirdsql.gds.EventHandle",
      "org.firebirdsql.gds.ng.jna.JnaDatabaseConnection",
      "org.h2.result.ResultInterface",
      "org.firebirdsql.gds.impl.DatabaseParameterBufferExtension",
      "org.h2.table.IndexColumn",
      "org.mariadb.jdbc.internal.com.read.resultset.rowprotocol.RowProtocol",
      "org.bouncycastle.asn1.x509.X509DefaultEntryConverter",
      "brs.TransactionImpl",
      "brs.Attachment$MessagingPollCreation",
      "org.h2.command.dml.Query",
      "org.firebirdsql.gds.ng.ParameterConverter",
      "org.h2.engine.Right",
      "org.bouncycastle.util.Encodable",
      "brs.Generator$Event",
      "org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers",
      "brs.db.BurstKey",
      "org.h2.schema.SchemaObject",
      "brs.db.BurstKey$LongKeyFactory",
      "org.json.simple.JSONStreamAware",
      "org.json.simple.JSONAware",
      "org.h2.store.FileStore",
      "org.mariadb.jdbc.internal.com.read.resultset.SelectResultSet",
      "org.firebirdsql.gds.GDSException",
      "org.h2.engine.SessionRemote",
      "org.json.simple.JSONArray",
      "org.firebirdsql.gds.ParameterBuffer",
      "org.h2.value.ValueUuid",
      "org.h2.index.IndexType",
      "brs.Appendix$Message",
      "org.bouncycastle.asn1.InMemoryRepresentable",
      "brs.Block",
      "org.h2.value.ValueDate",
      "org.h2.table.Table",
      "org.h2.result.SearchRow",
      "org.h2.value.ValueFloat",
      "org.mariadb.jdbc.internal.com.read.resultset.rowprotocol.BinaryRowProtocol",
      "org.firebirdsql.gds.ng.InfoProcessor",
      "org.firebirdsql.gds.ng.listeners.DatabaseListenerDispatcher",
      "org.h2.value.Transfer",
      "org.firebirdsql.gds.ng.listeners.DatabaseListener",
      "org.h2.result.RowList",
      "org.mariadb.jdbc.internal.protocol.Protocol",
      "brs.Attachment$1",
      "org.firebirdsql.gds.ng.listeners.TransactionListener",
      "brs.Attachment$3",
      "brs.Attachment$2",
      "org.h2.value.ValueBoolean",
      "org.h2.expression.ValueExpression",
      "org.firebirdsql.gds.ng.listeners.ExceptionListener",
      "org.h2.constraint.Constraint",
      "org.firebirdsql.gds.ng.AbstractFbAttachment",
      "org.firebirdsql.encodings.IEncodingFactory",
      "brs.Attachment",
      "org.h2.value.ValueLong",
      "org.h2.engine.DbObject",
      "org.firebirdsql.encodings.Encoding",
      "org.firebirdsql.gds.impl.TransactionParameterBufferImpl",
      "org.h2.value.ValueStringIgnoreCase",
      "org.h2.table.PlanItem",
      "org.h2.message.DbException",
      "org.firebirdsql.gds.ng.FbStatement",
      "org.h2.table.ColumnResolver",
      "org.h2.expression.Aggregate",
      "org.firebirdsql.gds.ng.FbTransaction",
      "brs.Generator",
      "org.h2.engine.Database",
      "org.h2.schema.TriggerObject",
      "org.firebirdsql.gds.ng.jna.JnaDatabase",
      "brs.BlockchainProcessor$TransactionNotAcceptedException",
      "brs.Appendix$EncryptToSelfMessage",
      "brs.db.store.Dbs",
      "org.bouncycastle.asn1.ASN1TaggedObject",
      "org.h2.value.ValueBytes",
      "org.h2.value.ValueResultSet",
      "org.h2.value.ValueDouble",
      "org.h2.constraint.ConstraintReferential",
      "org.h2.schema.SchemaObjectBase",
      "org.h2.value.ValueGeometry",
      "org.firebirdsql.encodings.EncodingDefinition",
      "org.firebirdsql.gds.ng.AbstractFbStatement",
      "brs.BurstException",
      "org.h2.util.StatementBuilder",
      "org.firebirdsql.jna.fbclient.FbClientLibrary",
      "brs.Burst",
      "org.h2.table.TableFilter",
      "brs.Appendix$AbstractEncryptedMessage",
      "brs.TransactionProcessor",
      "org.h2.table.Column",
      "org.h2.engine.Session",
      "org.h2.expression.Comparison",
      "brs.BlockchainProcessor$BlockOutOfOrderException",
      "org.h2.expression.FunctionCall",
      "org.firebirdsql.gds.ng.jna.JnaConnection",
      "org.h2.expression.ConditionAndOr",
      "brs.BlockchainProcessor",
      "org.h2.value.ValueArray",
      "org.h2.expression.TableFunction",
      "org.bouncycastle.asn1.ASN1OutputStream",
      "org.h2.util.TempFileDeleter",
      "org.firebirdsql.logging.LoggerFactory$LoggerCreator",
      "org.bouncycastle.asn1.x509.X509NameEntryConverter",
      "org.h2.table.IndexHints",
      "org.firebirdsql.gds.ng.WarningMessageCallback",
      "org.firebirdsql.logging.LoggerFactory",
      "org.h2.table.TableType",
      "brs.Poll",
      "org.h2.value.ValueStringFixed",
      "brs.Appendix$PublicKeyAnnouncement",
      "brs.util.ThreadPool",
      "org.firebirdsql.logging.LoggerFactory$JulLoggerCreator",
      "org.h2.value.ValueTimestamp",
      "org.firebirdsql.logging.LoggerFactory$NullLoggerCreator",
      "brs.util.Convert",
      "org.firebirdsql.gds.ng.AbstractFbDatabase",
      "org.bouncycastle.asn1.ASN1TaggedObjectParser",
      "brs.peer.Peer",
      "org.h2.index.Index",
      "org.firebirdsql.logging.Logger",
      "brs.BurstException$NotCurrentlyValidException",
      "org.firebirdsql.gds.ng.AbstractFbTransaction",
      "org.h2.store.DataHandler",
      "org.mariadb.jdbc.internal.ColumnType",
      "org.h2.engine.Role",
      "org.bouncycastle.asn1.DERSequence",
      "brs.Appendix$EncryptedMessage",
      "brs.BurstException$NotValidException",
      "org.h2.value.ValueByte",
      "org.h2.api.JavaObjectSerializer",
      "org.json.simple.JSONObject",
      "org.h2.store.LobStorageInterface",
      "org.mariadb.jdbc.internal.logging.Logger",
      "brs.Appendix",
      "org.firebirdsql.gds.ng.IAttachProperties",
      "org.firebirdsql.gds.ng.ServerVersionInformation",
      "org.firebirdsql.gds.DatabaseParameterBuffer",
      "brs.TransactionType",
      "org.h2.expression.ConditionNot",
      "org.h2.index.IndexCondition",
      "org.mariadb.jdbc.MariaDbStatement",
      "brs.Blockchain",
      "brs.db.BurstKey$Factory",
      "org.h2.expression.ConditionIn",
      "org.firebirdsql.gds.ng.AbstractConnection",
      "org.firebirdsql.gds.ng.jna.JnaAttachment",
      "org.firebirdsql.gds.ng.IConnectionProperties",
      "org.bouncycastle.util.Iterable",
      "org.firebirdsql.logging.LoggerFactory$ConsoleLoggerCreator",
      "org.bouncycastle.asn1.ASN1Encodable",
      "brs.Appendix$AbstractAppendix",
      "brs.util.ThreadPool$2",
      "brs.util.ThreadPool$1",
      "brs.Transaction",
      "org.h2.expression.FunctionInfo",
      "org.firebirdsql.logging.LoggerFactory$ReflectionLoggerCreator",
      "org.firebirdsql.gds.TransactionParameterBuffer",
      "brs.GeneratorImpl",
      "org.firebirdsql.gds.ng.FbDatabase",
      "brs.BurstException$ValidationException",
      "org.h2.command.Prepared",
      "org.firebirdsql.gds.ng.FbAttachment",
      "org.h2.jdbc.JdbcSQLException",
      "org.h2.engine.ConnectionInfo",
      "org.firebirdsql.gds.ConnectionParameterBuffer",
      "org.h2.value.ValueTime",
      "org.firebirdsql.gds.impl.ParameterBufferBase"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Poll_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "brs.Poll",
      "brs.util.ThreadPool",
      "brs.GeneratorImpl",
      "brs.Burst",
      "brs.TransactionImpl",
      "brs.util.Convert",
      "org.json.simple.JSONObject",
      "brs.BlockImpl",
      "org.bouncycastle.asn1.ASN1ObjectIdentifier",
      "org.bouncycastle.asn1.x509.X509ObjectIdentifiers",
      "org.bouncycastle.asn1.pkcs.PKCSObjectIdentifiers",
      "org.bouncycastle.asn1.x509.X509Name",
      "org.h2.value.Value",
      "org.h2.value.ValueDecimal",
      "org.h2.expression.Function",
      "org.firebirdsql.jna.fbclient.ISC_STATUS",
      "org.h2.expression.Operation",
      "org.h2.engine.Right",
      "org.h2.engine.SessionRemote",
      "org.h2.expression.Comparison",
      "org.h2.value.ValueTime",
      "org.firebirdsql.gds.impl.DatabaseParameterBufferExtension",
      "org.h2.index.IndexCondition",
      "org.h2.expression.ExpressionVisitor",
      "org.h2.table.Table",
      "org.h2.value.ValueLong",
      "org.h2.value.ValueDate",
      "org.h2.constraint.Constraint",
      "org.h2.constraint.ConstraintReferential",
      "org.firebirdsql.logging.LoggerFactory$JulLoggerCreator",
      "org.firebirdsql.logging.LoggerFactory",
      "org.firebirdsql.encodings.DefaultEncodingDefinition",
      "org.json.simple.JSONArray",
      "org.h2.value.ValueDouble",
      "org.firebirdsql.gds.ng.AbstractFbAttachment",
      "org.firebirdsql.gds.ng.AbstractFbDatabase",
      "org.firebirdsql.gds.ng.jna.JnaDatabase",
      "org.h2.expression.ConditionAndOr",
      "org.h2.result.Row",
      "org.mariadb.jdbc.internal.logging.LoggerFactory",
      "org.mariadb.jdbc.internal.ColumnType",
      "org.mariadb.jdbc.internal.com.read.resultset.ColumnInformation",
      "org.mariadb.jdbc.internal.com.read.resultset.SelectResultSet",
      "org.h2.expression.Aggregate"
    );
  }
}
